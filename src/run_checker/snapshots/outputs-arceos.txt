[allocator with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[allocator with Clippy checking] success=true count=2 diagnostics=
[1] warning: function `align_down` is never used
   --> crates/allocator/src/lib.rs:126:10
    |
126 | const fn align_down(pos: usize, align: usize) -> usize {
    |          ^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

[2] warning: function `align_up` is never used
   --> crates/allocator/src/lib.rs:131:10
    |
131 | const fn align_up(pos: usize, align: usize) -> usize {
    |          ^^^^^^^^

[3] warning: 2 warnings emitted


──────────────────────────────────────────────────────────────────────────────────
[arceos-bwbench with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-bwbench with Clippy checking] success=false count=2 diagnostics=
[1] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[2] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[3] error: aborting due to 2 previous errors

[4] For more information about this error, try `rustc --explain E0049`.

──────────────────────────────────────────────────────────────────────────────────
[arceos-display with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-display with Clippy checking] success=false count=1 diagnostics=
[1] error[E0433]: failed to resolve: could not find `arceos` in `os`
 --> apps/display/src/display.rs:5:14
  |
5 | use std::os::arceos::api::display as api;
  |              ^^^^^^ could not find `arceos` in `os`

[2] error: aborting due to 1 previous error

[3] For more information about this error, try `rustc --explain E0433`.

──────────────────────────────────────────────────────────────────────────────────
[arceos-echoserver with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-echoserver with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-exception with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-exception with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-helloworld with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-helloworld with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-httpclient with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-httpclient with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-httpserver with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-httpserver with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-memtest with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-memtest with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-parallel with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-parallel with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-priority with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-priority with Clippy checking] success=true count=1 diagnostics=
[1] warning: unused variable: `nice`
  --> apps/task/priority/src/main.rs:80:13
   |
80 |         let nice = TASK_PARAMS[i].nice;
   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_nice`
   |
   = note: `#[warn(unused_variables)]` on by default

[2] warning: 1 warning emitted


──────────────────────────────────────────────────────────────────────────────────
[arceos-shell with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-shell with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-sleep with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-sleep with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-tls with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-tls with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-udpserver with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-udpserver with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-yield with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos-yield with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos_api with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos_api with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos_posix_api with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arceos_posix_api with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arm_gic with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arm_gic with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arm_pl011 with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[arm_pl011 with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axalloc with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axalloc with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axconfig with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axconfig with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axdisplay with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axdisplay with Clippy checking] success=false count=4 diagnostics=
[1] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[2] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[3] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[4] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[5] error: aborting due to 4 previous errors

[6] For more information about this error, try `rustc --explain E0049`.

──────────────────────────────────────────────────────────────────────────────────
[axdriver with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axdriver with Clippy checking] success=false count=2 diagnostics=
[1] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[2] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[3] error: aborting due to 2 previous errors

[4] For more information about this error, try `rustc --explain E0049`.

──────────────────────────────────────────────────────────────────────────────────
[axerrno with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axerrno with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfeat with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfeat with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs with Clippy checking] success=false count=4 diagnostics=
[1] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[2] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[3] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[4] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[5] error: aborting due to 4 previous errors

[6] For more information about this error, try `rustc --explain E0049`.

──────────────────────────────────────────────────────────────────────────────────
[axfs_devfs with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs_devfs with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs_ramfs with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs_ramfs with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs_vfs with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axfs_vfs with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axhal with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axhal with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axio with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axio with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axlibc with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axlibc with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axlog with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axlog with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axnet with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axnet with Clippy checking] success=false count=4 diagnostics=
[1] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[2] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[3] error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
63 |     fn device_type(&self) -> DeviceType;
   |     ------------------------------------ expected 0 const parameters

[4] error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters
  --> ./repos/arceos/crates/driver_common/src/lib.rs:57:1
   |
57 | #[const_trait]
   | ^^^^^^^^^^^^^^ found 1 const parameter
...
60 |     fn device_name(&self) -> &str;
   |     ------------------------------ expected 0 const parameters

[5] error: aborting due to 4 previous errors

[6] For more information about this error, try `rustc --explain E0049`.

──────────────────────────────────────────────────────────────────────────────────
[axruntime with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axruntime with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axstd with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axstd with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axsync with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axsync with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axtask with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[axtask with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[bwbench-client with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[bwbench-client with Clippy checking] success=false count=1 diagnostics=
[1] error: the loop variable `i` is used to index `mac_addr`
  --> src/device.rs:80:22
   |
80 |             for i in 0..6 {
   |                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop
note: the lint level is defined here
  --> src/main.rs:3:9
   |
3  | #![deny(warnings)]
   |         ^^^^^^^^
   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`
help: consider using an iterator and enumerate()
   |
80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {
   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[2] error: aborting due to 1 previous error


──────────────────────────────────────────────────────────────────────────────────
[capability with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[capability with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[crate_interface with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[crate_interface with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[deptool with Fmt checking] success=true count=6 diagnostics=

[1] file: ./repos/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)
-        false => "--no-default-features"
+        false => "--no-default-features",

[2] file: ./repos/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)
-        _ => "-F ".to_string() + cfg.features.join(" ").as_str()
+        _ => "-F ".to_string() + cfg.features.join(" ").as_str(),

[3] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)
-use std::{fs, path::Path};
-use clap::{Arg, ArgAction, Command};

[4] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)
+use clap::{Arg, ArgAction, Command};
+use std::{fs, path::Path};

[5] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)
-

[6] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)
-            Arg::new("no-default").short('d').long("no-default").action(ArgAction::SetFalse)
+            Arg::new("no-default")
+                .short('d')
+                .long("no-default")
+                .action(ArgAction::SetFalse),

[7] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)
-            Arg::new("features").short('f').long("name").action(ArgAction::Append)
+            Arg::new("features")
+                .short('f')
+                .long("name")
+                .action(ArgAction::Append),

[8] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)
-            Arg::new("format").short('o').long("format").default_value("mermaid")
+            Arg::new("format")
+                .short('o')
+                .long("format")
+                .default_value("mermaid"),

[9] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)
+        .arg(Arg::new("target").short('t').long("target").required(true))

[10] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)
-            Arg::new("target").short('t').long("target").required(true)
+            Arg::new("save-path")
+                .short('s')
+                .long("save-path")
+                .default_value("out.txt"),

[11] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)
-        .arg(
-            Arg::new("save-path").short('s').long("save-path").default_value("out.txt")
-        )

[12] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)
-    let features = matches.get_many::<String>("features").unwrap_or_default()
+    let features = matches
+        .get_many::<String>("features")
+        .unwrap_or_default()

[13] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)
-        _ => GraphFormat::Mermaid
+        _ => GraphFormat::Mermaid,

[14] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)
-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {
+fn gen_config(
+    is_default: bool,
+    features: Vec<String>,
+    format: GraphFormat,
+    loc: String,
+    output_loc: String,
+) -> Config {

[15] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)
-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)
+    crates
+        .into_iter()
+        .map(|p| p.unwrap().file_name())
+        .any(|n| n.to_str().unwrap() == name)

[16] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)
-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)
+    crates
+        .into_iter()
+        .map(|p| p.unwrap().file_name())
+        .any(|n| n.to_str().unwrap() == name)

[17] file: ./repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)
-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)
+    check_crate_name(&name)
+        || check_module_name(&name)
+        || check_app_name(name)
+        || check_lib_name(name)

[18] file: ./repos/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)
-use crate::{parse_deps, cmd_parser::is_arceos_crate};
+use crate::{cmd_parser::is_arceos_crate, parse_deps};

[19] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)
-mod cmd_parser;

[20] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)
-mod mermaid_generator;
+mod cmd_parser;

[21] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)
+mod mermaid_generator;

[22] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)
-use std::process::Command;

[23] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)
+use std::process::Command;

[24] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)
-pub use cmd_parser::{parse_cmd, build_loc};
+pub use cmd_parser::{build_loc, parse_cmd};

[25] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)
-   Mermaid,
-   D2,
+    Mermaid,
+    D2,

[26] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)
-    pub features: Vec::<String>,
+    pub features: Vec<String>,

[27] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)
-    output_loc: String
+    output_loc: String,

[28] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)
-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {
-        Config { no_default, format, features, loc, output_loc }
+    pub fn build(
+        no_default: bool,
+        features: Vec<String>,
+        format: GraphFormat,
+        loc: String,
+        output_loc: String,
+    ) -> Config {
+        Config {
+            no_default,
+            format,
+            features,
+            loc,
+            output_loc,
+        }

[29] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)
-                .args(cmds)
-                .output()
-                .expect("failed to execute process")
+            .args(cmds)
+            .output()
+            .expect("failed to execute process")

[30] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)
-                .args(cmds)
-                .output()
-                .expect("failed to execute process")
+            .args(cmds)
+            .output()
+            .expect("failed to execute process")

[31] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)
-    let mut rst = vec!();
+    let mut rst = vec![];

[32] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)
-        _ => generate_mermaid(config)
+        _ => generate_mermaid(config),

[33] file: ./repos/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)
-        Ok(()) => {},
-        Err(error) => println!("Error during writing file {}, {}", config.output_loc, error)
+        Ok(()) => {}
+        Err(error) => println!("Error during writing file {}, {}", config.output_loc, error),

[34] file: ./repos/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)
-use crate::{parse_deps, cmd_parser::is_arceos_crate};
+use crate::{cmd_parser::is_arceos_crate, parse_deps};

[35] file: ./repos/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)
-use deptool::{run, parse_cmd};
+use deptool::{parse_cmd, run};

──────────────────────────────────────────────────────────────────────────────────
[deptool with Clippy checking] success=true count=10 diagnostics=
[1] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/cmd_parser.rs:82:22
   |
82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)
   |                      ^^^^^ help: change this to: `name`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `#[warn(clippy::needless_borrow)]` on by default

[2] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/cmd_parser.rs:82:50
   |
82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)
   |                                                  ^^^^^ help: change this to: `name`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[3] warning: this expression creates a reference which is immediately dereferenced by the compiler
 --> src/mermaid_generator.rs:6:34
  |
6 |     let deps_parsed = parse_deps(&deps);
  |                                  ^^^^^ help: change this to: `deps`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[4] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/mermaid_generator.rs:16:29
   |
16 |         if !is_arceos_crate(&name) {
   |                             ^^^^^ help: change this to: `name`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[5] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/mermaid_generator.rs:32:32
   |
32 |             parsed_crates.push(&name);
   |                                ^^^^^ help: change this to: `name`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[6] warning: this expression creates a reference which is immediately dereferenced by the compiler
 --> src/d2_generator.rs:8:34
  |
8 |     let deps_parsed = parse_deps(&deps);
  |                                  ^^^^^ help: change this to: `deps`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[7] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/d2_generator.rs:18:29
   |
18 |         if !is_arceos_crate(&name) {
   |                             ^^^^^ help: change this to: `name`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[8] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/d2_generator.rs:34:32
   |
34 |             parsed_crates.push(&name);
   |                                ^^^^^ help: change this to: `name`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[9] warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/lib.rs:37:39
   |
37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);
   |                                       ^^^^ help: change this to: `cfg`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

[10] warning: writing `&String` instead of `&str` involves a new object where a slice will do
  --> src/lib.rs:55:21
   |
55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {
   |                     ^^^^^^^ help: change this to: `&str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg
   = note: `#[warn(clippy::ptr_arg)]` on by default

[11] warning: 10 warnings emitted


──────────────────────────────────────────────────────────────────────────────────
[driver_block with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_block with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_common with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_common with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_display with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_display with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_net with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_net with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_pci with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_pci with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_virtio with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[driver_virtio with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[dw_apb_uart with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[dw_apb_uart with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[flatten_objects with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[flatten_objects with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[handler_table with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[handler_table with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[kernel_guard with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[kernel_guard with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[lazy_init with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[lazy_init with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[linked_list with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[linked_list with Clippy checking] success=true count=2 diagnostics=
[1] warning: you should consider adding a `Default` implementation for `List<A>`
   --> crates/linked_list/src/unsafe_list.rs:99:5
    |
99  | /     pub const fn new() -> Self {
100 | |         Self { first: None }
101 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
    = note: `#[warn(clippy::new_without_default)]` on by default
help: try adding this
    |
97  + impl<A: Adapter + ?Sized> Default for List<A> {
98  +     fn default() -> Self {
99  +         Self::new()
100 +     }
101 + }
    |

[2] warning: you should consider adding a `Default` implementation for `Links<T>`
   --> crates/linked_list/src/unsafe_list.rs:435:5
    |
435 | /     pub const fn new() -> Self {
436 | |         Self(UnsafeCell::new(MaybeUninit::uninit()))
437 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
433 + impl<T: ?Sized> Default for Links<T> {
434 +     fn default() -> Self {
435 +         Self::new()
436 +     }
437 + }
    |

[3] warning: 2 warnings emitted


──────────────────────────────────────────────────────────────────────────────────
[memory_addr with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[memory_addr with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[mingo with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[mingo with Clippy checking] success=false count=8 diagnostics=
[1] error: Add the target_arch to above's check if the following code is safe to use
  --> src/panic_wait.rs:30:5
   |
30 |     compile_error!("Add the target_arch to above's check if the following code is safe to use");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

[2] error[E0432]: unresolved import `arch_cpu`
  --> src/cpu.rs:16:9
   |
16 | pub use arch_cpu::{nop, wait_forever};
   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`

[3] error[E0433]: failed to resolve: could not find `driver` in `bsp`
   --> src/main.rs:133:26
    |
133 |     if let Err(x) = bsp::driver::init() {
    |                          ^^^^^^ could not find `driver` in `bsp`

[4] error[E0433]: failed to resolve: could not find `memory` in `bsp`
   --> src/main.rs:180:37
    |
180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;
    |                                     ^^^^^^ could not find `memory` in `bsp`

[5] error[E0425]: cannot find function `board_name` in module `bsp`
   --> src/main.rs:157:29
    |
157 |     println!("{:^37}", bsp::board_name());
    |                             ^^^^^^^^^^ not found in `bsp`

[6] error: unwinding panics are not supported without std
  |
  = help: using nightly cargo, use -Zbuild-std with panic="abort" to avoid unwinding
  = note: since the core library is usually precompiled with panic="unwind", rebuilding your crate with panic="abort" may not be enough to fix the problem

[7] warning: the feature `panic_info_message` has been stable since 1.81.0-nightly and no longer requires an attribute to enable
   --> src/main.rs:112:12
    |
112 | #![feature(panic_info_message)]
    |            ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(stable_features)]` on by default

[8] error[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope
  --> src/panic_wait.rs:60:24
   |
60 |         info.message().unwrap_or(&format_args!("")),
   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`

[9] error: aborting due to 7 previous errors; 1 warning emitted

[10] Some errors have detailed explanations: E0425, E0432, E0433, E0599.
[11] For more information about an error, try `rustc --explain E0425`.

──────────────────────────────────────────────────────────────────────────────────
[page_table with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[page_table with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[page_table_entry with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[page_table_entry with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[percpu with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[percpu with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[percpu_macros with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[percpu_macros with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[ratio with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[ratio with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[scheduler with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[scheduler with Clippy checking] success=true count=5 diagnostics=
[1] warning: you should consider adding a `Default` implementation for `List<A>`
   --> crates/linked_list/src/unsafe_list.rs:99:5
    |
99  | /     pub const fn new() -> Self {
100 | |         Self { first: None }
101 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
    = note: `#[warn(clippy::new_without_default)]` on by default
help: try adding this
    |
97  + impl<A: Adapter + ?Sized> Default for List<A> {
98  +     fn default() -> Self {
99  +         Self::new()
100 +     }
101 + }
    |

[2] warning: you should consider adding a `Default` implementation for `Links<T>`
   --> crates/linked_list/src/unsafe_list.rs:435:5
    |
435 | /     pub const fn new() -> Self {
436 | |         Self(UnsafeCell::new(MaybeUninit::uninit()))
437 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
    |
433 + impl<T: ?Sized> Default for Links<T> {
434 +     fn default() -> Self {
435 +         Self::new()
436 +     }
437 + }
    |

[3] warning: 2 warnings emitted

[4] warning: you should consider adding a `Default` implementation for `CFScheduler<T>`
   --> crates/scheduler/src/cfs.rs:111:5
    |
111 | /     pub const fn new() -> Self {
112 | |         Self {
113 | |             ready_queue: BTreeMap::new(),
114 | |             min_vruntime: None,
115 | |             id_pool: AtomicIsize::new(0_isize),
116 | |         }
117 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
    = note: `#[warn(clippy::new_without_default)]` on by default
help: try adding this
    |
109 + impl<T> Default for CFScheduler<T> {
110 +     fn default() -> Self {
111 +         Self::new()
112 +     }
113 + }
    |

[5] warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`
  --> crates/scheduler/src/fifo.rs:63:5
   |
63 | /     pub const fn new() -> Self {
64 | |         Self {
65 | |             ready_queue: List::new(),
66 | |         }
67 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
   |
61 + impl<T> Default for FifoScheduler<T> {
62 +     fn default() -> Self {
63 +         Self::new()
64 +     }
65 + }
   |

[6] warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`
  --> crates/scheduler/src/round_robin.rs:64:5
   |
64 | /     pub const fn new() -> Self {
65 | |         Self {
66 | |             ready_queue: VecDeque::new(),
67 | |         }
68 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default
help: try adding this
   |
62 + impl<T, const S: usize> Default for RRScheduler<T, S> {
63 +     fn default() -> Self {
64 +         Self::new()
65 +     }
66 + }
   |

[7] warning: 3 warnings emitted


──────────────────────────────────────────────────────────────────────────────────
[slab_allocator with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[slab_allocator with Clippy checking] success=true count=1 diagnostics=
[1] warning: 
  --> crates/slab_allocator/src/slab.rs:93:26
   |
93 |         self.head.take().map(|node| {
   |                          ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_inspect
   = note: `#[warn(clippy::manual_inspect)]` on by default
help: try
   |
93 ~         self.head.take().inspect(|node| {
94 |             self.head = node.next.take();
95 ~             self.len -= 1;
   |

[2] warning: 1 warning emitted


──────────────────────────────────────────────────────────────────────────────────
[spinlock with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[spinlock with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[timer_list with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[timer_list with Clippy checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[tuple_for_each with Fmt checking] success=true count=0 diagnostics=

──────────────────────────────────────────────────────────────────────────────────
[tuple_for_each with Clippy checking] success=true count=0 diagnostics=
