[package]
name = "os-checker"
version = "0.1.1"
edition = "2021"
license = "MIT"
rust-version = "1.80"
exclude = ["assets", ".github", "repos", "tests", "examples"]
repository = "https://github.com/os-checker/os-checker"
description = "Run a collection of checkers targeting Rust crates, and report bad checking results and statistics."

[dependencies]
argh = "0.1.12"   # cli argument parser
walkdir = "2.5.0" # recursively search Cargo.toml for finding packages
basic-toml = "0.1"

serde = { version = "1", features = ["derive"] }
cargo_metadata = "0.18.1" # parse metadata for knowing project layout
regex = "1.10.5"
compact_str = { version = "0.8.0", features = ["serde"] }
itertools = "0.13.0"
rayon = "1.10.0"
prettydiff = { version = "0.7.0", default-features = false }

either = "1"
hashbrown = { version = "0.14", features = ["default"]}

serde_json = { version = "1.0.125", features = ["preserve_order"] }
indexmap = { version = "2.4.0", features = ["serde"] }
strip-ansi-escapes = "0.2"

# error handling
eyre = "0.6.12"
color-eyre = "0.6.3"

# logger
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# shell commands
duct = "0.13.7" # better subprocess, pipe, redirct
yash-syntax = "0.11.0" # shell lang parsing

[dev-dependencies]
expect-test = "1.5.0" # use `UPDATE_EXPECT=1 cargo t` to update all tests
tempfile = "3"

[build-dependencies]
duct = "0.13.7" # better subprocess, pipe, redirct
color-eyre = "0.6.3"

[workspace]
exclude = ["repos/**"]

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.19.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false
