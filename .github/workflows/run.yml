name: Run Checkers
# on: [push]
on:
  push:
    branches: [ main ]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download repos-ui.json
        run: |
          mkdir ~/check
          cp assets/repos-ui.json ~/check/repos-ui.json
          cp assets/repos-default.json ~/check/repos-default.json
          # wget https://raw.githubusercontent.com/os-checker/os-checker.github.io/main/repos.yaml -O ~/check/repos.yaml

      - uses: dtolnay/rust-toolchain@nightly

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Set Up Github Environment Variables
        run: echo "RUSTC_VERSION=$(rustc -V)" >> $GITHUB_ENV

      - name: Restore Rustup Cache 
        id: cache-rustup-restore
        uses: actions/cache/restore@v4
        with:
          path: ~/.rustup/
          key: ${{ runner.os }}-rustup-${{ env.RUSTC_VERSION }}

      - name: Restore Cargo Cache 
        id: cache-cargo-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ env.RUSTC_VERSION }}

      - name: Install os-checker
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo install --path . --force

      - name: Prepare toolchain environment needed from all repos and checkers
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cd ~/check && RUST_LOG=trace os-checker --config repos-default.json --config repos-ui.json --emit json --norun --setup

      - name: Run All Checkers
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: |
          cd ~/check
          echo "查看是否安装了 libclang"
          dpkg -l | grep libclang
          RUST_LOG=trace os-checker --config repos-ui.json --emit ui.json

      - name: Commit And Push ui.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # author zjp-CN, and commiter bot
          git config --global user.name "zjp-CN"
          git config --global user.email "jiping_zhou@foxmail.com"
          git config --global committer.name "zjp-CN[bot]"
          git config --global committer.email "zjp-CN[bot]@users.noreply.github.com"

          echo "正在 clone os-checker/database"
          git clone https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com/os-checker/database.git
          echo "成功 clone os-checker/database"
          cd database
          git pull --rebase # 防止二次运行 CI 时落后于远程分支

          export BOT=1 UI_JSON=ui.json # database 仓库的 json 检查结果
          cp ~/check/ui.json $UI_JSON
          # 运行 jq 生成 WebUI 所需的 JSON 文件，并推送到 database 仓库
          sh ci.sh

      - name: Save Rustup Cache
        id: cache-rustup-save
        uses: actions/cache/save@v4
        with:
          path: ~/.rustup/
          key: ${{ steps.cache-rustup-restore.outputs.cache-primary-key }}

      - name: Save Cargo Cache
        id: cache-cargo-save
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ steps.cache-cargo-restore.outputs.cache-primary-key }}

