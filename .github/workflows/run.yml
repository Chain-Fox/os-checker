name: Run Checkers

on:
  push:
    branches: [ main, feat/db ]

env:
  # os-checker log level
  RUST_LOG: info
  # flag a bot commit
  BOT: 1
  # false: run with json stdout emitted, and no interaction with database;
  # true: run with json file emitted, and push it to database.
  PUSH: true
  # use which configs
  CONFIGS: repos.json # for debug single repo
  # CONFIGS: repos-default.json repos-ui.json # full repo list

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Prepare Makefile and repos JSONs
        run: |
          mkdir -p ~/check/batch
          cp Makefile ~/check/
          cp assets/repos.json ~/check/
          cp assets/repos-ui.json ~/check/
          cp assets/repos-default.json ~/check/
          wget https://raw.githubusercontent.com/os-checker/database/refs/heads/debug/cache.redb -O ~/check/cache.redb

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy

      - name: Install os-checker
        run: cargo install --path . --force

      - name: Run All Checkers
        run: |
          cd ~/check
          # 安装 lockbud，减少源码编译的时间
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/os-checker/lockbud/releases/download/v0.1.0/lockbud-installer.sh | sh
          git lfs install --skip-smudge # 如果 lfs 下载不了大文件，跳过下载
          make run

      - name: Commit And Push To database repo
        if: ${{ env.PUSH == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          cargo install --path os-checker-database -F clear_batch

          cd ~/check
          make clone_database
          cd database
          git switch debug
          echo "切换到 debug 分支"
          git pull --rebase # 防止二次运行 CI 时落后于远程分支

          rm -rf batch # 移除旧的 batch 数据
          cp -r ~/check/batch . # 更新新的 batch 数据
          cp ~/check/cache.redb .
          sh push.sh

